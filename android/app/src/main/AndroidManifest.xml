<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.ammu_app">

    <!-- Legacy Bluetooth permissions for Android 11 and below -->
    <uses-permission android:name="android.permission.BLUETOOTH" android:maxSdkVersion="30" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" android:maxSdkVersion="30" />

    <!-- New Bluetooth permissions for Android 12+ -->
    <uses-permission android:name="android.permission.BLUETOOTH_SCAN" android:usesPermissionFlags="neverForLocation" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADVERTISE" />

    <!--
    Location permissions. Note: ACCESS_FINE_LOCATION is generally sufficient and implies
    ACCESS_COARSE_LOCATION. If your app truly needs fine location, use ACCESS_FINE_LOCATION.
    For Bluetooth scanning, LOCATION permissions might still be needed on some older devices
    even if you use "neverForLocation" on BLUETOOTH_SCAN for Android 12+.
    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /> Uncomment if you only need coarse location or want to explicitly list both. -->

    <!-- Other app permissions -->
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-permission android:name="android.permission.SEND_SMS" />
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- Hardware features -->
    <uses-feature android:name="android.hardware.bluetooth_le" android:required="false" />
    <uses-feature android:name="android.hardware.bluetooth" android:required="false" />

    <application
        android:label="AMMU"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher">

                    <!-- Google Maps API Key -->
            <meta-data
                android:name="com.google.android.geo.API_KEY"
                android:value="AIzaSyCxdpo8Q2wEQo3IkMoO8jZ9b25LD97tehw" />

                <meta-data
            android:name="com.google.android.gms.client_id"
            android:value="591533067808-m9cnoj8bqng1p18bv014t9djdajk1iig.apps.googleusercontent.com" />

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">

            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>

    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.
         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT"/>
            <data android:mimeType="text/plain"/>
        </intent>
        <!-- Add this for permission handler -->
        <package android:name="com.android.permissioncontroller" />
    </queries>
</manifest>